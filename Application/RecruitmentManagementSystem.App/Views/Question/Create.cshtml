@using RecruitmentManagementSystem.Model
@model RecruitmentManagementSystem.App.ViewModels.Question.QuestionCreateViewModel

@{
    ViewBag.Title = "Create Question";
}

<h3>Create New Question</h3>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
                <div>@Html.ActionLink("Create new category", "Create", "QuestionCategory")</div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Notes, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Notes, new {@class = "form-control", rows = 6})
                @Html.ValidationMessageFor(model => model.Notes, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group" >
            @Html.LabelFor(model => model.QuestionType, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("QuestionType", EnumHelper.GetSelectList(typeof (QuestionType)), "Select Type", new {@class = "form-control", id = "drop-down-question-type"})
                @Html.ValidationMessageFor(model => model.QuestionType, "", new {@class = "text-danger"})
            </div>
        </div>
        
        <a href="#" id="achr-add-choice" data-toggle="modal" data-target="#choice-create-modal">
            Add Choices
        </a>
        
            <div class="modal fade" id="choice-create-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel">Enter Choice</h4>
                        </div>
                        <div class="modal-body">
                            <label class="control-label">Title</label>
                            <input type="text" class="form-control" id="choice" />
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" id="btn-add-choice">Add choice</button>
                        </div>
                    </div>
                </div>
            </div>
            
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" class="btn btn-default" id="btn-add-question" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/application")
}